{"ast":null,"code":"var _jsxFileName = \"/Users/lambda_school_loaner_282/Desktop/LambdaAssignments/GitClones/Intro-to-React/Intro-to-React/react/src/App.js\";\nimport './App.css';\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Label, Input } from \"reactstrap\";\nimport Character from \"./components/Character\";\n\nconst App = () => {\n  const [char, setChar] = useState([]);\n  const [search, setSearh] = useState(\"\");\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  }; // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n\n\n  useEffect(() => {\n    // Fetch characters from the API in an effect hook. Remember, anytime you have a \n    // side effect in a component, you want to think about which state and/or props it should\n    // sync up with, if any.\n    axios.get(\"https://rickandmortyapi.com/api/character\").then(response => {\n      console.log(response.data);\n      const initialArr = response.data.results;\n      const filteredData = initialArr.filter(character => {\n        return character.name.toLowerCase().includes(search.toLowerCase());\n      });\n      setChar; //setChar(response.data.results);\n    }).catch(err => {\n      console.log(\"something went wrong\");\n    }).then(() => {\n      console.log(\"success\");\n    });\n  }, []);\n  console.log(char);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"Header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Characters\"), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Search for a character by name\", /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"search\",\n    value: search,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Character, {\n    characterArray: char,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lambda_school_loaner_282/Desktop/LambdaAssignments/GitClones/Intro-to-React/Intro-to-React/react/src/App.js"],"names":["axios","React","useEffect","useState","Container","Row","Label","Input","Character","App","char","setChar","search","setSearh","handleChange","e","setSearch","target","value","get","then","response","console","log","data","initialArr","results","filteredData","filter","character","name","toLowerCase","includes","catch","err"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgCC,KAAhC,QAA6C,YAA7C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,QAAT,IAAqBV,QAAQ,CAAC,EAAD,CAAnC;;AACA,QAAMW,YAAY,GAAGC,CAAC,IAAI;AACxBC,IAAAA,SAAS,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT;AACD,GAFD,CAHkB,CAOhB;AACA;;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AAChB;AACA;AACA;AACAF,IAAAA,KAAK,CAACmB,GAAN,CAAU,2CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,YAAMC,UAAU,GAAGJ,QAAQ,CAACG,IAAT,CAAcE,OAAjC;AACA,YAAMC,YAAY,GAAGF,UAAU,CAACG,MAAX,CAAmBC,SAAD,IAAe;AACpD,eAAOA,SAAS,CAACC,IAAV,CAAeC,WAAf,GAA6BC,QAA7B,CAAsCpB,MAAM,CAACmB,WAAP,EAAtC,CAAP;AACD,OAFoB,CAArB;AAIFpB,MAAAA,OAAO,CAPW,CAQhB;AACD,KAVD,EAaCsB,KAbD,CAaOC,GAAG,IAAI;AAACZ,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAAoC,KAbnD,EAeDH,IAfC,CAeI,MAAM;AAACE,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAAuB,KAflC;AAiBD,GArBU,EAqBR,EArBQ,CAAT;AAsBFD,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,KAAK,EAAEE,MAAxC;AAAgD,IAAA,QAAQ,EAAEE,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFF,eAME,oBAAC,SAAD;AAAW,IAAA,cAAc,EAAGJ,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAWD,CA3CD;;AA8CA,eAAeD,GAAf","sourcesContent":["import './App.css';\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Label, Input } from \"reactstrap\";\nimport Character from \"./components/Character\"\n\nconst App = () => {\nconst [char, setChar] = useState([]);\nconst [search, setSearh] = useState(\"\")\nconst handleChange = e => {\n  setSearch(e.target.value)\n}\n\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n  useEffect(() => {\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n  axios.get(\"https://rickandmortyapi.com/api/character\")\n  .then(response => {\n    console.log(response.data)\n    const initialArr = response.data.results\n    const filteredData = initialArr.filter((character) => {\n      return character.name.toLowerCase().includes(search.toLowerCase())\n    }\n    )\n  setChar\n    //setChar(response.data.results);\n  }\n\n  )\n  .catch(err => {console.log(\"something went wrong\")})\n\n.then(() => {console.log(\"success\")})\n\n}, []);\nconsole.log(char)\n  return (\n    <div className=\"App\">\n      <h1 className=\"Header\">Characters</h1>\n      <Label>Search for a character by name\n          <Input type=\"text\" name=\"search\" value={search} onChange={handleChange}/>\n          </Label>\n\n      <Character characterArray ={char}/>\n    </div>\n\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}